package tasks;

import helpers.utils.UITabs;
import utils.Task;

import static helpers.Interfaces.*;
import static main.dNMZ.*;

public class Setup extends Task {

    @Override
    public boolean activate() {
        // Only run this task once
        return !setupDone;
    }

    @Override
    public boolean execute() {
        Logger.log("Initial Setup");

        Logger.log("Check location");
        if (Player.within(scriptArea)) {
            Logger.log("We are located within the Yanille/NMZ area");
        } else if (Player.within(NMZArena)) {
            Logger.log("We are located within the NMZ arena");
        } else {
            Logger.log("Could not locate us in or around the NMZ/Yanille area. Please move there and start the script again.");
            Logger.log("Location: " + Walker.getPlayerPosition().toString());
            Logout.logout();
            Script.stop();
        }

        Logger.log("Open Inventory");
        if(!GameTabs.isTabOpen(UITabs.INVENTORY)) {
            GameTabs.openTab(UITabs.INVENTORY);
        }

        Logger.log("Setting break and sleep manager to postpone mode");
        Client.postponeBreaksAndSleeps();

        Logger.log("Disabling AFK Handler");
        Client.disableAFKHandler();

        Logger.log("Filling the offensive potion map");
        potionData.put("Divine super combat", new int[]{23694, 23691, 23688, 23685});
        potionData.put("Divine ranging", new int[]{23742, 23739, 23736, 23733});
        potionData.put("Overload", new int[]{11733, 11732, 11731, 11730});
        potionData.put("Ranging", new int[]{173, 171, 169, 2444});
        potionData.put("Super combat", new int[]{12701, 12699, 12697, 12695});
        potionData.put("Super strength only", new int[]{161, 159, 157, 2440});

        // Initialize absorb pot interval
        absorptionPotionInterval = generateRandom(75000, 150000);

        Logger.log("Making sure chatbox is closed");
        Chatbox.closeChatbox();

        Logger.log("Adding color find OCR patterns for absorption font to our cache");
        fillAbsorbOCRMap();
        fillPotionstockOCRMap();
        fillDominicOCRMap();

        // Check Auto retaliate
        GameTabs.openTab(UITabs.COMBAT);
        Condition.sleep(750, 1000);
        if (!Player.isAutoRetaliateOn()) {
            Logger.log("Enable auto retaliate");
            Player.enableAutoRetaliate();
        }

        setupDone = true;

        if (!needToBank()) {
            Logger.debugLog("No need to bank. Marking restockDone as true.");
            restockDone = true;
        }

        return false;
    }

    private void fillAbsorbOCRMap() {
        absorptionDigitPatterns.put("0", new int[][]{
                {0,0,0,0,0,1,1,0,0,0,0},
                {0,0,0,0,1,1,1,1,0,0,0},
                {0,0,0,1,0,1,1,1,1,1,0},
                {0,0,1,0,0,0,0,1,1,1,0},
                {0,1,1,0,0,0,0,0,1,1,1},
                {0,1,0,0,0,0,0,0,1,1,1},
                {1,1,0,0,0,0,0,0,0,1,1},
                {1,1,0,0,0,0,0,0,0,1,1},
                {1,1,0,0,0,0,0,0,0,1,1},
                {1,1,0,0,0,0,0,0,0,1,1},
                {1,1,0,0,0,0,0,0,0,1,1},
                {1,1,0,0,0,0,0,0,0,1,1},
                {1,1,1,0,0,0,0,0,0,1,0},
                {1,1,1,0,0,0,0,0,1,1,0},
                {0,1,1,1,0,0,0,0,1,0,0},
                {0,1,1,1,1,1,0,1,0,0,0},
                {0,0,1,1,1,1,1,0,0,0,0}
        });

        absorptionDigitPatterns.put("1", new int[][]{
                {0,0,0,0,0,1,0,0,0},
                {0,0,0,0,1,1,0,0,0},
                {0,0,1,1,1,1,0,0,0},
                {0,1,1,0,1,1,0,0,0},
                {0,0,0,0,1,1,0,0,0},
                {0,0,0,0,1,1,0,0,0},
                {0,0,0,0,1,1,0,0,0},
                {0,0,0,0,1,1,0,0,0},
                {0,0,0,0,1,1,0,0,0},
                {0,0,0,0,1,1,0,0,0},
                {0,0,0,0,1,1,0,0,0},
                {0,0,0,0,1,1,0,0,0},
                {0,0,0,0,1,1,0,0,0},
                {0,0,0,0,1,1,0,0,0},
                {0,0,0,0,1,1,0,0,0},
                {0,0,0,0,1,1,1,0,0},
                {1,1,1,1,1,1,1,1,1}
        });

        absorptionDigitPatterns.put("2", new int[][]{
                {0,0,0,1,1,1,1,1,1,0,0},
                {0,0,1,1,1,1,1,1,1,0,0},
                {0,1,1,0,0,0,0,1,1,1,0},
                {1,1,0,0,0,0,0,0,1,1,0},
                {1,1,0,0,0,0,0,0,0,1,0},
                {1,1,0,0,0,0,0,0,0,1,0},
                {1,1,1,1,0,0,0,0,1,1,0},
                {1,1,1,1,0,0,0,0,1,0,0},
                {0,1,1,0,0,0,0,0,1,0,0},
                {0,0,0,0,0,0,0,1,0,0,0},
                {0,0,0,0,0,0,1,0,0,0,0},
                {0,0,0,0,0,1,0,0,0,0,0},
                {0,0,0,0,1,0,0,0,0,0,0},
                {0,0,0,1,0,0,0,0,0,0,0},
                {0,0,1,1,1,0,0,0,0,1,1},
                {0,1,1,1,1,1,1,1,1,1,0},
                {1,0,0,0,1,1,1,1,1,0,0}
        });

        absorptionDigitPatterns.put("3", new int[][]{
                {0,0,0,0,0,1,1,1,1,0,0,0},
                {0,0,0,1,1,1,1,1,1,1,0,0},
                {0,0,0,1,0,0,0,0,1,1,0,0},
                {0,0,1,1,0,0,0,0,1,1,1,0},
                {0,0,1,1,1,0,0,0,0,1,0,0},
                {0,0,1,1,0,0,0,0,1,1,0,0},
                {0,0,0,0,0,0,0,0,1,0,0,0},
                {0,0,0,0,0,0,0,1,1,0,0,0},
                {0,0,0,0,0,1,1,1,1,1,1,0},
                {0,0,0,0,0,0,0,1,1,1,1,0},
                {0,0,1,0,0,0,0,0,0,1,1,1},
                {0,1,0,0,0,0,0,0,0,1,1,1},
                {1,1,0,0,0,0,0,0,0,0,1,0},
                {1,1,0,0,0,0,0,0,0,0,1,0},
                {1,1,1,0,0,0,0,0,0,1,0,0},
                {0,1,1,1,1,1,1,1,1,0,0,0},
                {0,0,1,1,1,1,1,0,0,0,0,0}
        });

        absorptionDigitPatterns.put("4", new int[][]{
                {0,0,0,0,0,0,0,0,1,0,0,0},
                {0,0,0,0,0,0,0,0,1,0,0,0},
                {0,0,0,0,0,0,0,1,1,0,0,0},
                {0,0,0,0,0,0,0,1,1,0,0,0},
                {0,0,0,0,0,0,1,1,1,0,0,0},
                {0,0,0,0,0,1,0,1,1,0,0,0},
                {0,0,0,0,1,0,0,1,1,0,0,0},
                {0,0,0,0,1,0,0,1,1,0,0,0},
                {0,0,0,1,0,0,0,1,1,0,0,0},
                {0,0,1,0,0,0,0,1,1,0,0,0},
                {0,1,0,0,0,0,0,1,1,0,0,0},
                {1,1,1,1,1,1,1,1,1,1,1,1},
                {0,0,0,0,0,0,0,1,1,1,0,0},
                {0,0,0,0,0,0,0,1,1,0,0,0},
                {0,0,0,0,0,0,0,1,1,0,0,0},
                {0,0,0,0,0,0,0,1,1,1,0,0},
                {0,0,0,0,0,1,1,1,1,1,1,0},
                {0,0,0,0,1,0,0,0,0,0,0,0}
        });

        absorptionDigitPatterns.put("5", new int[][]{
                {0,0,0,0,0,0,0,0,0,1,0},
                {0,0,1,1,1,1,1,1,1,0,0},
                {0,0,1,1,1,1,1,1,0,0,0},
                {0,0,1,0,0,0,0,0,0,0,0},
                {0,1,0,0,0,0,0,0,0,0,0},
                {0,0,1,1,1,1,1,0,0,0,0},
                {0,1,1,1,1,1,1,1,1,0,0},
                {0,1,1,1,1,1,1,1,1,1,0},
                {0,0,0,0,0,0,0,1,1,1,0},
                {0,0,0,0,0,0,0,0,1,1,0},
                {0,0,0,0,0,0,0,0,0,1,1},
                {0,1,0,0,0,0,0,0,0,1,0},
                {0,1,0,0,0,0,0,0,0,1,0},
                {1,1,0,0,0,0,0,0,0,1,0},
                {1,1,0,0,0,0,0,0,1,0,0},
                {1,1,1,1,1,1,1,1,0,0,0},
                {0,1,1,1,1,1,1,0,0,0,0}
        });

        absorptionDigitPatterns.put("6", new int[][]{
                {0,0,0,0,0,0,0,0,1,0,0},
                {0,0,0,0,0,0,1,1,1,1,0},
                {0,0,0,0,1,1,1,1,1,0,0},
                {0,0,0,1,0,0,0,0,0,0,0},
                {0,0,1,0,0,0,0,0,0,0,0},
                {0,0,1,0,0,0,0,0,0,0,0},
                {0,1,0,0,0,0,0,0,0,0,0},
                {0,1,0,0,0,1,1,1,1,0,0},
                {1,1,0,0,1,1,1,1,1,1,0},
                {1,1,0,1,0,0,0,1,1,1,1},
                {1,1,1,0,0,0,0,0,1,1,1},
                {1,1,0,0,0,0,0,0,0,1,1},
                {1,1,1,0,0,0,0,0,0,1,1},
                {1,1,1,0,0,0,0,0,0,1,0},
                {0,1,1,1,0,0,0,0,0,1,0},
                {0,0,1,1,1,1,1,1,1,0,0},
                {0,0,0,1,1,1,1,1,0,0,0}
        });

        absorptionDigitPatterns.put("7", new int[][]{
                {0,0,0,1,1,1,0,0,0,1,1},
                {0,1,1,1,1,1,1,1,1,1,0},
                {0,1,1,1,1,1,1,1,1,1,0},
                {1,0,0,0,0,0,0,0,1,0,0},
                {1,0,0,0,0,0,0,0,1,0,0},
                {0,0,0,0,0,0,0,0,1,0,0},
                {0,0,0,0,0,0,0,0,1,0,0},
                {0,0,0,0,0,0,0,1,0,0,0},
                {0,0,0,0,0,0,0,1,0,0,0},
                {0,0,0,0,0,0,0,1,0,0,0},
                {0,0,0,0,0,0,1,0,0,0,0},
                {0,0,0,0,0,0,1,0,0,0,0},
                {0,0,0,0,0,0,1,0,0,0,0},
                {0,0,0,0,0,1,0,0,0,0,0},
                {0,0,1,0,1,1,0,0,0,0,0},
                {0,0,1,1,1,0,0,0,0,0,0},
                {0,1,1,1,1,0,0,0,0,0,0}
        });

        absorptionDigitPatterns.put("8", new int[][]{
                {0,0,0,0,0,1,1,1,0,0,0},
                {0,0,0,0,1,1,1,1,1,1,0},
                {0,0,0,1,0,0,0,1,1,1,0},
                {0,0,1,0,0,0,0,0,1,1,0},
                {0,1,1,0,0,0,0,0,0,1,0},
                {0,1,1,0,0,0,0,0,0,1,0},
                {0,1,1,1,0,0,0,0,1,0,0},
                {0,1,1,1,1,1,0,1,0,0,0},
                {0,0,1,1,1,1,1,1,1,0,0},
                {0,0,0,1,1,1,1,1,1,1,0},
                {0,1,1,0,0,0,0,1,1,1,1},
                {0,1,0,0,0,0,0,0,0,1,1},
                {1,1,0,0,0,0,0,0,0,1,1},
                {1,1,0,0,0,0,0,0,0,1,1},
                {1,1,1,0,0,0,0,0,0,1,0},
                {0,1,1,1,1,0,0,0,1,0,0},
                {0,0,1,1,1,1,1,1,0,0,0}
        });

        absorptionDigitPatterns.put("9", new int[][]{
                {0,0,0,0,0,1,1,0,0,0,0},
                {0,0,0,1,1,1,1,1,1,0,0},
                {0,0,1,0,0,0,1,1,1,1,0},
                {0,1,0,0,0,0,0,0,1,1,1},
                {1,1,0,0,0,0,0,0,1,1,1},
                {1,1,0,0,0,0,0,0,0,1,1},
                {1,1,0,0,0,0,0,0,0,1,1},
                {1,1,1,0,0,0,0,0,1,1,1},
                {0,1,1,1,1,0,0,1,0,1,1},
                {0,0,1,1,1,1,1,0,0,1,1},
                {0,0,0,0,0,0,0,0,0,1,0},
                {0,0,0,0,0,0,0,0,0,1,0},
                {0,0,0,0,0,0,0,0,1,0,0},
                {0,0,0,0,0,0,0,1,0,0,0},
                {0,0,0,0,0,0,1,0,0,0,0},
                {0,0,1,1,1,1,0,0,0,0,0},
                {0,1,1,1,0,0,0,0,0,0,0}
        });
    }

    private void fillPotionstockOCRMap() {
        potionstockDigitPatterns.put("0", new int[][]{
                {0,0,1,1,0,0},
                {0,1,0,0,1,0},
                {1,0,0,1,0,1},
                {1,0,0,1,0,1},
                {1,0,0,1,0,1},
                {1,0,1,0,0,1},
                {1,0,1,0,0,1},
                {1,0,1,0,0,1},
                {0,1,0,0,1,0},
                {0,0,1,1,0,0}
        });

        potionstockDigitPatterns.put("1", new int[][]{
                {0,0,1,0,0},
                {0,1,1,0,0},
                {1,0,1,0,0},
                {0,0,1,0,0},
                {0,0,1,0,0},
                {0,0,1,0,0},
                {0,0,1,0,0},
                {0,0,1,0,0},
                {0,0,1,0,0},
                {1,1,1,1,1}
        });

        potionstockDigitPatterns.put("2", new int[][]{
                {0,1,1,1,0,0},
                {1,0,0,0,1,0},
                {0,0,0,0,0,1},
                {0,0,0,0,0,1},
                {0,0,0,0,1,0},
                {0,0,0,1,0,0},
                {0,0,1,0,0,0},
                {0,1,0,0,0,0},
                {1,0,0,0,0,0},
                {1,1,1,1,1,1}
        });

        potionstockDigitPatterns.put("3", new int[][]{
                {0,1,1,1,0},
                {1,0,0,0,1},
                {0,0,0,0,1},
                {0,0,0,0,1},
                {0,1,1,1,0},
                {0,0,0,0,1},
                {0,0,0,0,1},
                {0,0,0,0,1},
                {1,0,0,0,1},
                {0,1,1,1,0}
        });

        potionstockDigitPatterns.put("4", new int[][]{
                {1,0,0,0,0,0},
                {1,0,0,0,0,0},
                {1,0,0,0,0,0},
                {1,0,0,0,0,0},
                {1,0,0,1,0,0},
                {1,0,0,1,0,0},
                {1,0,0,1,0,0},
                {1,1,1,1,1,1},
                {0,0,0,1,0,0},
                {0,0,0,1,0,0}
        });

        potionstockDigitPatterns.put("5", new int[][]{
                {1,1,1,1,1},
                {1,0,0,0,0},
                {1,0,0,0,0},
                {1,1,1,0,0},
                {0,0,0,1,0},
                {0,0,0,0,1},
                {0,0,0,0,1},
                {0,0,0,0,1},
                {1,0,0,0,1},
                {0,1,1,1,0}
        });

        potionstockDigitPatterns.put("6", new int[][]{
                {0,0,1,1,0,0},
                {0,1,0,0,1,0},
                {1,0,0,0,0,0},
                {1,0,0,0,0,0},
                {1,0,1,1,0,0},
                {1,1,0,0,1,0},
                {1,0,0,0,0,1},
                {1,0,0,0,0,1},
                {0,1,0,0,1,0},
                {0,0,1,1,0,0}
        });

        potionstockDigitPatterns.put("7", new int[][]{
                {1,1,1,1,1},
                {0,0,0,0,1},
                {0,0,0,1,0},
                {0,0,0,1,0},
                {0,0,1,0,0},
                {0,0,1,0,0},
                {0,1,0,0,0},
                {0,1,0,0,0},
                {1,0,0,0,0},
                {1,0,0,0,0}
        });

        potionstockDigitPatterns.put("8", new int[][]{
                {0,0,1,1,0,0},
                {0,1,0,0,1,0},
                {1,0,0,0,0,1},
                {0,1,0,0,1,0},
                {0,0,1,1,0,0},
                {0,1,0,0,1,0},
                {1,0,0,0,0,1},
                {1,0,0,0,0,1},
                {0,1,0,0,1,0},
                {0,0,1,1,0,0}
        });

        potionstockDigitPatterns.put("9", new int[][]{
                {0,1,1,1,1,0},
                {1,0,0,0,0,1},
                {1,0,0,0,0,1},
                {1,0,0,0,0,1},
                {0,1,0,0,0,1},
                {0,0,1,1,1,1},
                {0,0,0,0,0,1},
                {0,0,0,0,0,1},
                {0,0,0,0,0,1},
                {0,0,0,0,0,1}
        });
    }

    private void fillDominicOCRMap() {
        dominicChatPatterns.put("h", new int[][]{
                {0,0,1,0,0,0,0},
                {1,1,0,0,0,0,0},
                {0,1,0,0,0,0,0},
                {0,1,0,0,0,0,0},
                {0,1,0,0,0,0,0},
                {0,1,1,1,1,0,0},
                {0,1,0,0,0,1,0},
                {0,1,0,0,0,1,0},
                {0,1,0,0,0,1,0},
                {0,1,0,0,0,1,0},
                {0,1,0,0,0,1,1}
        });

        dominicChatPatterns.put("a", new int[][]{
                {0,1,1,1,0},
                {1,0,0,1,0},
                {0,0,1,1,0},
                {0,1,0,1,0},
                {1,0,0,1,1},
                {1,1,1,0,1}
        });

        dominicChatPatterns.put("r", new int[][]{
                {1,1,0,1,1},
                {0,1,1,0,0},
                {0,1,0,0,0},
                {0,1,0,0,0},
                {0,1,0,1,0},
                {0,1,1,0,0}
        });

        dominicChatPatterns.put("d", new int[][]{
                {0,0,0,0,0,1},
                {0,0,0,1,1,1},
                {0,0,0,0,0,1},
                {0,0,0,0,0,1},
                {0,0,0,0,0,1},
                {0,1,1,1,1,1},
                {1,0,0,0,0,1},
                {1,0,0,0,0,1},
                {1,0,0,0,0,1},
                {0,1,0,0,0,1},
                {0,0,1,1,1,1}
        });
    }
}